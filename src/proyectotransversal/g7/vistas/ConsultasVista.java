package proyectotransversal.g7.vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectotransversal.g7.Control.Conexion;
import proyectotransversal.g7.Control.InscripcionData;
import proyectotransversal.g7.Control.MateriaData;
import proyectotransversal.g7.Modelo.Alumno;
import proyectotransversal.g7.Modelo.Inscripcion;
import proyectotransversal.g7.Modelo.Materia;

public class ConsultasVista extends javax.swing.JInternalFrame {

    private MateriaData materiaData;
    private InscripcionData inscripcionData;
    private ArrayList<Materia> materias;
    private Conexion conexion;
    private DefaultTableModel modelo;
    private boolean iniciado = false;

    public ConsultasVista() {
        initComponents();
        conexion = new Conexion();
        materiaData = new MateriaData(conexion);
        materias = (ArrayList<Materia>)materiaData.obtenerMaterias();
        cargarMaterias();
        modelo = new DefaultTableModel();
        inscripcionData = new InscripcionData(conexion);
        cargarTabla();
        refrescarTabla();
        iniciado = true;
    }

    public void cargarMaterias() {
        for (Materia mat : materias) {
            jcbMaterias.addItem(mat);
        }
    }
    
    public void cargarTabla(){
        
        ArrayList<Object> columnas = new ArrayList<>();
        columnas.add("Alumno");
        columnas.add("ID");
        columnas.add("DNI");
        columnas.add("Nota");
        
        for(Object col : columnas){
            modelo.addColumn(col);
        }
        
        jtAlumnos.setModel(modelo);
        
    }
    
    public void refrescarTabla(){
        Materia materia = (Materia)jcbMaterias.getSelectedItem();
        
        ArrayList<Alumno> lista = (ArrayList<Alumno>) inscripcionData.alumnosDeXMateria(materia);
        ArrayList<Inscripcion> notas = (ArrayList<Inscripcion>) inscripcionData.obtenerInscripciones();
        
        for(Alumno alu : lista){
            for(int i = 0; i < notas.size(); i++){
                if(notas.get(i).getAlumno().getIdAlumno() == alu.getIdAlumno() && notas.get(i).getMateria().getIdMateria() == materia.getIdMateria()){
                    modelo.addRow(new Object[]{alu.getApellido()+", "+alu.getNombre(), alu.getIdAlumno(), alu.getDni(), notas.get(i).getNota()});
                    break;
                }
            }
        }
    }
    
    public void limpiarTabla(){
        int a = modelo.getRowCount()-1;
        for(int i = a; i >= 0; i--){
            modelo.removeRow(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAlumnos = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        jcbMaterias = new javax.swing.JComboBox<>();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Consultas");

        jLabel2.setText("Materia");

        jtAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtAlumnos);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jcbMaterias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMateriasItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSalir)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(150, 150, 150)))
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jcbMateriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMateriasItemStateChanged
        if(iniciado){
            limpiarTabla();
            refrescarTabla();
        }
    }//GEN-LAST:event_jcbMateriasItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Materia> jcbMaterias;
    private javax.swing.JTable jtAlumnos;
    // End of variables declaration//GEN-END:variables
}
