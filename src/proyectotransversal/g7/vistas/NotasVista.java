/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectotransversal.g7.vistas;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectotransversal.g7.Control.AlumnoData;
import proyectotransversal.g7.Control.Conexion;
import proyectotransversal.g7.Control.InscripcionData;
import proyectotransversal.g7.Control.MateriaData;
import proyectotransversal.g7.Modelo.Alumno;
import proyectotransversal.g7.Modelo.Inscripcion;
import proyectotransversal.g7.Modelo.Materia;

/**
 *
 * @author Agustin
 */
public class NotasVista extends javax.swing.JInternalFrame {

    //Atributos
    private List<Alumno> listaAlumos;
    private InscripcionData inscripcionData;
    private AlumnoData alumnoData;
    private MateriaData materiaData;
    //Tabla
    private DefaultTableModel modeloTabla;

    public NotasVista(Conexion conexion) {
        initComponents();

        materiaData = new MateriaData(conexion);
        alumnoData = new AlumnoData(conexion);
        inscripcionData = new InscripcionData(conexion);
        listaAlumos = (ArrayList<Alumno>) alumnoData.obtenerAlumnos();
        modeloTabla = new DefaultTableModel();
        cargaAlumnos();
        armarTituloTabla();
        borrarTabla();
        jbtnGuardar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcbListaAlumnos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAlum = new javax.swing.JTable();
        jbtnCancel = new javax.swing.JButton();
        jbtnGuardar = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        jLabel1.setText("CARGA DE NOTAS");

        jcbListaAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbListaAlumnosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jLabel2.setText("ALUMNO");

        jtAlum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtAlum);

        jbtnCancel.setText("Salir");
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        jbtnGuardar.setText("Guardar");
        jbtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 46, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnGuardar)
                        .addGap(130, 130, 130)
                        .addComponent(jbtnCancel)))
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jcbListaAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbListaAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnGuardar)
                    .addComponent(jbtnCancel))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbListaAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbListaAlumnosActionPerformed
        llenarTabla();
        
    }//GEN-LAST:event_jcbListaAlumnosActionPerformed

    private void jbtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGuardarActionPerformed
        if (modeloTabla.getRowCount() > 0) {
            Alumno alum = (Alumno) jcbListaAlumnos.getSelectedItem();
            int idMat = (int) jtAlum.getValueAt(jtAlum.getSelectedRow(), 0);
            Materia materia = materiaData.obtenerMateriaPorID(idMat);

            Double nota = Double.parseDouble(jtAlum.getValueAt(jtAlum.getSelectedRow(), 3).toString());
            if (nota > 0.0 && nota <= 10.0) {
                inscripcionData.actualizarNota(alum, materia, nota);
                JOptionPane.showMessageDialog(this, "Nota modificada con exito");
            } else {
                JOptionPane.showMessageDialog(this, "Nota fuera de rango");
            }
        }
    }//GEN-LAST:event_jbtnGuardarActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jbtnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnGuardar;
    private javax.swing.JComboBox<Alumno> jcbListaAlumnos;
    private javax.swing.JTable jtAlum;
    // End of variables declaration//GEN-END:variables

    private void cargaAlumnos() {
        jcbListaAlumnos.removeAllItems();
        Collections.sort(listaAlumos, new Comparator<Alumno>() {
            @Override
            public int compare(Alumno t, Alumno t1) {
                return t.getApellido().compareToIgnoreCase(t1.getApellido());
            }
        });

        for (Alumno alumList : listaAlumos) {
            jcbListaAlumnos.addItem(alumList);
        }
    }

    private void armarTituloTabla() {
        ArrayList<Object> columnas = new ArrayList();
        columnas.add("ID");
        columnas.add("Materia");
        columnas.add("AÃ±o");
        columnas.add("Nota");

        for (Object ite : columnas) {
            modeloTabla.addColumn(ite);
        }
        jtAlum.setModel(modeloTabla);
    }

    private void borrarTabla() {
        int a = jtAlum.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            modeloTabla.removeRow(i);
        }
    }

    private void llenarTabla() {
        if (modeloTabla.getRowCount() > 0) {
            borrarTabla();
        }

        Alumno alum = (Alumno) jcbListaAlumnos.getSelectedItem();
        List<Inscripcion> inscriptas = inscripcionData.inscripcionesXAlumno(alum);
        for (Inscripcion ins : inscriptas) {
            modeloTabla.addRow(new Object[]{ins.getMateria().getIdMateria(), ins.getMateria().getNombre(), ins.getMateria().getAnio(), ins.getNota()});
        }
        if(modeloTabla.getRowCount() > 0) {
            jbtnGuardar.setEnabled(true);
        }else{
            jbtnGuardar.setEnabled(false);
        }
        
    }

}
